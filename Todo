@Test
void testLoadCoffreData_Success() {
    // Arrange
    CriteriaBuilder cb = mock(CriteriaBuilder.class);
    CriteriaQuery<CoffreData> cq = mock(CriteriaQuery.class);
    Root<CoffreData> root = mock(Root.class);
    TypedQuery<CoffreData> typedQuery = mock(TypedQuery.class);

    when(entityManager.getCriteriaBuilder()).thenReturn(cb);
    when(cb.createQuery(CoffreData.class)).thenReturn(cq);
    when(cq.from(CoffreData.class)).thenReturn(root);

    // Mocking the predicates
    Predicate predicate = mock(Predicate.class);
    when(cb.equal(root.get("id"), 1L)).thenReturn(predicate);
    when(cq.select(root)).thenReturn(cq);
    when(cq.where(predicate)).thenReturn(cq);

    // Mock the typed query
    when(entityManager.createQuery(cq)).thenReturn(typedQuery);
    when(typedQuery.getSingleResult()).thenReturn(mockCoffreData);

    // Act
    CoffreData result = coffreUtilService.loadCoffreData(1L);

    // Assert
    assertNotNull(result);
    verify(entityManager, times(1)).createQuery(cq);
    verify(typedQuery, times(1)).getSingleResult();
}
